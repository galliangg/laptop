---
- hosts: all
  vars:
    #ansible_become: yes  # use sudo
    ansible_become_method: sudo
    ansible_become_password: "{{ vault_ansible_become_password }}"

    vault_ansible_become_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      32653836346537663564393161376532633864386663316363303961333535386330303866323231
      6665623365653839346161366336313039623535383463660a373236373831643366373332363965
      62353561393939616438636139626163363535313535366136303937336636626437646337353466
      3138363964373532350a306432633465383662623239316666653231376463373239643133636466
      6439

  #MAS App Store Applications
    vault_mas_username: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      37303938663132313465643538656334633862656235666234353239663534356131653932366435
      3265613237353266326335353339636534333133333632330a323565656132316161666435306338
      62326532336234386338316333336562373536626363653635326631303836646164623662343765
      3461313361613838330a613636666236316637353037653264653937316364653734303436306232
      65633631663338386636616630663432386333363132306138303238353963663433

    vault_mas_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      32303163646433653935623831316137303064323436353438656362323034376462313263316136
      6563313931653362623838333764343530316331393434630a643038616236383163616234373761
      35633261666363636233663764376530663535613732323638666631613335303039336164393634
      6634373538613734650a363765663465373763303732306330393437666234366533653532333639
      6438

    mas_username: "{{ vault_mas_username }}"

    mas_password: "{{ vault_mas_password }}"

    mas_applications:
      #- 409201541 # Pages (7.0.1)
      #- 409203825 # Numbers (5.0.1)
      #- 409183694 # Keynote (8.0.1)
      #- 682658836 # GarageBand (10.2.0)
      #- 408981434 # iMovie (10.1.9)
      - 1295203466 # Microsoft Remote Desktop (10.1.8)
      - 1381004916 # Discovery (2.0.1)
      - 425424353 # The Unarchiver (3.11.6)
      - 897118787 # Shazam (1.2.5)
      - 510620098 # MediaInfo (18.05)
      #- 549083868 # Display Menu (2.2.3)
      ##- 823766827 # OneDrive (18.065.0329)
      #- 883878097 # Server (5.6.1)
      #- 1037126344 # Apple Configurator 2 (2.7)

#Homebrew Applications
    applications_v1:
      #- appzapper # uninstaller
      - atom # sublime without annoying popup | https://atom.io/download/mac
      #- asix-ax88179 # Driver for usb ethernet adaptor
      - bbedit
      - burn
      #- calibre # berks
      #- deeper # (w/ onyx) turn on hidden functions
      #- diffmerge # free visual diq
      #- disk-inventory-x # reclaim space on your expensive-ass Apple SSD | http://www.derlien.com/
      - dolphin-dev
      - etcher
      #- fing # network diagnostics
      - filezilla
      - firefox
      #- focusatwill # Moved to appliacations_v2
      - flux # get more sleep
      - get-iplayer-automator
      #- github-desktop
      - github # Old name is github-desktop
      - google-chrome
      #- gotomeeting
      - handbrake # vid compression
      #- istumbler # network discovery GUI
      - ip-in-menu-bar
      - iterm2
      #- java8
      #- jxplorer
      - keepingyouawake # replaces insomniax & caffeinex
      #- mactracker # benchmarking
      #- monolingual # remove unneeded osx lang files
      #- microsoft-teams
      - namebench
      - onyx # system maintenance
      - openemu-experimental
      - pgadmin4
      - platypus
      #- ringcentral
      - sony-remoteplay # ps4 remote play
      - scummvm # Monkeys
      - sdformatter
      - sequel-pro # FREE SQL GUI!
      - shuttle # ssh management
      - sonos
      #- skype
      - slack
      - spotify
      - subler
      - touchswitcher # dock in the touch bar
      #- transmission # torrents
      - trash-it
      - tunnelblick-beta # VPN
      #- vmware-fusion8 #Still using Version 8
      - vlc
      - whatsapp
      - wineskin-winery
      - wireshark
      - vagrant # | https://www.vagrantup.com/downloads.html
      - vagrant-manager #
      - xld
      #- zoomus # better videoconferences
      - zenmap

    applications_v2:
      - asix-ax88179 # Driver for usb ethernet adaptor
      - prolific-pl2303
      - virtualbox # | https://www.virtualbox.org/
      - virtualbox-extension-pack
      #- focusatwill


    install_oh_my_zsh:  false

    brew_taps:
      - homebrew/core
      - homebrew/cask
      - homebrew/cask-drivers
      - homebrew/cask-versions
      - homebrew/cask-fonts
      - buo/cask-upgrade # for brew cu
      - vitorgalvao/tiny-scripts # for cask-repair
      - thoughtbot/formulae # for rcm

    #dotfile_repo_username: glennr # the GH repo where your dotfiles are

    brew_utils:
      - ansible #already installed by ./mac bootstrap script
      #- cowsay # amazing
      #- coreutils # Install GNU core utilities (those that come with OS X are outdated)
      - dockutil
      - gandi.cli
      - mas
      - mtr # better traceroute
      - nmap
      - openssl # for easyrsa
      - pwgen # password generator
      #- sshpass

    dockitems_to_remove:
      - Siri
      - Launchpad
      - Reminders
      - Messages
      - FaceTime

    dockitems_to_persist:
      - name: System Preferences
        path: "/Applications/System Preferences.app"
        pos: 1
      - name: Safari
        path: "/Applications/Safari.app"
        pos: 2
      - name: Firefox
        path: "/Applications/Firefox.app"
        pos: 3
      - name: Mail
        path: /Applications/Mail.app
        pos: 4
      - name: Contacts
        path: /Applications/Contacts.app
        pos: 5
      - name: Calendar
        path: /Applications/Calendar.app
        pos: 6
      - name: Notes
        path: /Applications/Utilities/Notes.app
        pos: 7
      - name: App Store
        path: "/Applications/App Store.app"
        pos: 8
      - name: Preview
        path: /Applications/Preview.app
        pos: 9
      - name: BBEdit
        path: /Applications/BBEdit.app
        pos: 10
      - name: Terminal
        path: /Applications/Terminal.app
        pos: 11
      - name: Atom
        path: /Applications/Atom.app
        pos: 12

    zsh_path: /usr/local/bin/zsh

    home: "{{ lookup('env','HOME') }}"

  tasks:

    - name: Check Homebrew is installed
      stat: path=/usr/local/bin/brew
      register: brew_installed

    - debug:
        msg: "mas_username is {{ mas_username }}. vault_mas_username is {{ vault_mas_username }}"

    - debug:
        msg: "mas_password is {{ mas_password }}. vault_mas_password is {{ vault_mas_password }}"

    #- name: Install Homebrew
    #  #shell: ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
    #  shell: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    #  when: brew_installed.stat.exists == false

    - name: Install required Homebrew Taps
      homebrew_tap: name={{ item }} state=present
      with_items: "{{ brew_taps }}"

    #- name: Install required Homebrew Taps
    #  shell: brew tap {{ item }}
    #  with_items: "{{ brew_taps }}"

    ### UTILS
   # - name: Create sshpass v1.06 formula
   #   shell: brew create --force https://sourceforge.net/projects/sshpass/files/sshpass/1.06/sshpass-1.06.tar.gz
   #   ignore_errors: yes

    - name: Install libraries/utils with homebrew
      homebrew: name={{ item }} state=latest update_homebrew=yes
      with_items: "{{ brew_utils }}"

    - name: Cleanup after brewing
      shell: brew cleanup -s 

# MAS status
    - name: Check if mas is logged in
      shell: mas account
      register: mas_login
      ignore_errors: true

    - debug:
        msg: "Output of mas_login stdout is {{ mas_login.stdout }}. mas_login rc is {{ mas_login.rc }}"

    - name: Login to mas
      shell:  mas signin {{ mas_username }} {{ mas_password}}
      # rc = 0 is logged in, rc = 1 not logged in
      when: mas_login.rc != 0
      ignore_errors: true

    - name: Check if mas is logged in
      shell: mas account
      register: mas_login
      ignore_errors: true

    - debug:
        msg: "Output of mas_login stdout is {{ mas_login.stdout }}. mas_login rc is {{ mas_login.rc }}"



    ### Dockutil fixing

    - name: Remove all crap from Dock
      shell: dockutil --remove '{{ item }}'
      ignore_errors: true
      with_items: "{{ dockitems_to_remove }}"

    ### APPZ

    #- name: Check for installed apps(casks)
    #  shell: brew cask list | grep {{ item }}
    #  register: installed_applications
    #  with_items: applications_v1
    #  ignore_errors: true

    #- name: Install Apps with brew-cask
    #  shell: brew cask install {{ item }}
    #  with_items: "{{ applications_v1 }}"
    #  when: "{{ item not in installed_applications.results|map(attribute='stdout') }}"

#    - name: Install Apps with homebrew cask
#      homebrew_cask: name={{ item }} state=present
#      with_items: "{{ applications_v1 }}"
#      #when: "{{ item not in installed_applications.results|map(attribute='stdout') }}"

    - name: Install required App Store Apps with mas
      shell: mas install {{ item }}
      with_items: "{{ mas_applications }}"

    ### Dockutil fixing

    - name: Check if items in dock exist
      shell: dockutil --find '{{ item.name }}' || dockutil --add '{{ item.path }}'
      with_items: "{{ dockitems_to_persist }}"

    - name: Fix order
      shell: dockutil --move '{{ item.name }}' --position {{ item.pos }}
      with_items: "{{ dockitems_to_persist }}"


    ### OSX SETTINGS

    - name: Configure System Settings
      script: scripts/system_settings.sh
      become: true


    ### DOTFILES

#    - name: Check rcm is installed
#      stat: path=/usr/local/bin/rcup
#      register: rcm_installed
#
#    - name: Install rcm for dotfiles management
#      shell: brew tap thoughtbot/formulae && brew install rcm
#      when: rcm_installed.stat.exists == false
#
#    - name: Check ~/src dir exists
#      stat: path=~/src/
#      register: src_dir_exists
#
#    - name: Assures ~/src dir exists
#      file: path=~/src state=directory
#
#    - name: Assures ~/src/thoughtbot dir exists
#      file: path=~/src/thoughtbot state=directory
#
#    - name: Install thoughtbot/dotfiles
#      git: repo=https://github.com/thoughtbot/dotfiles.git dest=~/src/thoughtbot/dotfiles
#
#    - name: Link ~/dotfiles to ~/src/thoughtbot/dotfiles
#      file: dest=~/dotfiles
#            src=~/src/thoughtbot/dotfiles
#            state=link
#            force=yes
#
#    - name: Assures ~/src/{{ dotfile_repo_username }} dir exists
#      file: path=~/src/{{ dotfile_repo_username }} state=directory
#
#    - name: Install {{ dotfile_repo_username }}/dotfiles
#      git: repo=https://github.com/{{ dotfile_repo_username }}/dotfiles.git dest=~/src/{{ dotfile_repo_username }}/dotfiles
#
#    - name: Link ~/dotfiles-local to ~/src/{{ dotfile_repo_username }}/dotfiles
#      file: dest=~/dotfiles-local
#            src=~/src/{{ dotfile_repo_username }}/dotfiles
#            state=link
#            force=yes
#
#    - name: Generate dotfiles with rcup
#      shell: env RCRC=~/dotfiles/rcrc rcup


    ## POST INSTALL STEPS / Cask gotchas
    #
    # require manual intervention!
    #

#    - name: Run Little Snitch Installer
#      shell: open /opt/homebrew-cask/Caskroom/little-snitch/3.5.3/Little\ Snitch\ Installer.app
#      when: "'little-snitch' in applications"
#
#    - name: Run Monolingual
#      shell: open ~/Applications/Monolingual.app
#      when: "'monolingual' in applications"
